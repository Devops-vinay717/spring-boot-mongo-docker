node
{
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5'))])
    def buildnumber = BUILD_NUMBER

    stage ("CheckoutCode")
    {
       git branch: 'Testing', credentialsId: 'd4790e46-f344-4c93-9a9c-f91e7f1f9c1c', url: 'https://github.com/Devops-vinay717/spring-boot-mongo-docker.git'
    }
    stage ("Build")
    {
        def mavenHome = tool name: "maven3.6.3"
        sh "${mavenHome}/bin/mvn clean package"
    }
    stage ("Build Image")
    {
        sh "docker build -t redbull200/springbootmongo:${buildnumber} ."
    }
    stage ("Dockerhub login and push")
    {
        withCredentials([string(credentialsId: 'Dockerhubpwd', variable: 'Dockerhubpwd')])  
        {
           sh "docker login -u redbull200 -p ${Dockerhubpwd}"
           sh "docker push redbull200/springbootmongo:${buildnumber}"
        }         
    }
    stage("Remove Local Image")
    {
        sh "docker rmi -f dockerhandson/springbootmongo:${buildnumber}"
    }
    stage ("Deploy applicatopn using docker")
    {
        sshagent(['Docker-deploy']) 
        {
        sh "scp -o StrictHostkeyChecking=no docker-compose.yml ubuntu@17.0.0.65:"
        sh "ssh -o StrictHostkeyChecking=no ubuntu@17.0.0.65 sudo apt  install docker-compose -y"
        sh "ssh -o StrictHostkeyChecking=no docker-compose up -d"
        }
    }
}   
